{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAUA,IAAIC,EAAY,EAEZC,EAAa,EAEbC,EAAY,EAEZC,EAAmB,EAEjBC,EAAUC,SAASC,cAAc,SAUvC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,uBAAwCM,OAAfT,EAAS,QAAYS,OAANR,EAAM,OAEpDG,EAAK,sBAAqCK,OAAfT,EAAS,QAAYS,OAANR,EAAM,M,GAEnDA,GACHN,GAAoB,EACpBF,GAAcC,C,IAnBlBE,EAAQc,iBAAiB,UAEzB,SAAoBC,GAClBA,EAAEC,iBApB8BC,EAAAjB,EAAQkB,SAAhCb,EAAwBY,EAAxBZ,MAAOc,EAAiBF,EAAjBE,KAAMC,EAAWH,EAAXG,OACrBxB,EAAYyB,OAAOD,EAAOE,OAC1BzB,EAAawB,OAAOhB,EAAMiB,OAC1BxB,EAAYuB,OAAOF,EAAKG,OAqC1B,SAA+BC,GAC7B,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAC/BrB,EAAcJ,EAAkBF,GAC7B4B,MAAK,SAAAC,G,OAAUhC,EAAAiC,OAAOC,QAAQF,E,IAC9BG,OAAM,SAAAH,G,OAAUhC,EAAAiC,OAAOG,QAAQJ,E,IAtBpCK,CAAsBnC,GAvBxB,IACkCqB,EAAxBZ,EAAOc,EAAMC,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nfunction returnValues() {\n  const { delay, step, amount } = formRef.elements;\n  maxAmount = Number(amount.value);\n  firstDelay = Number(delay.value);\n  stepValue = Number(step.value);\n  // console.log(stepValue);\n}\n\nlet maxAmount = 0;\n\nlet firstDelay = 0;\n\nlet stepValue = 0;\n\nlet numberOfPosition = 1;\n\nconst formRef = document.querySelector('.form');\n\nformRef.addEventListener('submit', submitForm);\n\nfunction submitForm(e) {\n  e.preventDefault();\n  returnValues();\n  createSeveralPromises(maxAmount);\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n    numberOfPosition += 1;\n    firstDelay += stepValue;\n  });\n}\n\nfunction createSeveralPromises(number) {\n  for (let i = 0; i < number; i += 1) {\n    createPromise(numberOfPosition, firstDelay)\n      .then(result => Notify.success(result))\n      .catch(result => Notify.failure(result));\n  }\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$maxAmount","$ce04d3a99e08e73b$var$firstDelay","$ce04d3a99e08e73b$var$stepValue","$ce04d3a99e08e73b$var$numberOfPosition","$ce04d3a99e08e73b$var$formRef","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","concat","addEventListener","e","preventDefault","_elements","elements","step","amount","Number","value","number","i","then","result","Notify","success","catch","failure","$ce04d3a99e08e73b$var$createSeveralPromises"],"version":3,"file":"03-promises.0dee9128.js.map"}